name: Build OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: .config
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout source
      uses: actions/checkout@v4

    - name: Show disk space
      run: |
        echo "Free space:"
        df -h

    - name: Initialize environment
      run: |
        export DEBIAN_FRONTEND=noninteractive

        # Ensure no dpkg lock
        echo "Checking for dpkg lock..."
        while sudo fuser /var/lib/dpkg/lock-frontend >/dev/null 2>&1; do
            echo "Another apt process is running. Waiting 2 seconds..."
            sleep 2
        done

        echo "Starting apt-get update..."
        sudo apt-get -qq update

        echo "Installing build dependencies..."
        sudo apt-get -qq install -y --no-install-recommends ack antlr3 asciidoc ... || { echo \"apt install failed\"; exit 1; }

        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo apt-get -qq update
        sudo apt-get -qq install -y --no-install-recommends ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler flex gawk gcc-multilib g++-multilib gettext \
            genisoimage git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev \
            libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev \
            libreadline-dev libssl-dev libtool llvm lrzsz msmtp ninja-build p7zip p7zip-full patch pkgconf \
            python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion \
            swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev || { echo "apt install failed"; exit 1; }
        sudo apt-get -qq autoremove --purge
        sudo apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown x86:x86 /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        sudo rm -rf /workdir/openwrt
        git clone "$REPO_URL" -b "$REPO_BRANCH" openwrt
        ln -sf /workdir/openwrt "$GITHUB_WORKSPACE/openwrt"

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download packages
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      run: |
        cd openwrt
        echo "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s

    - name: Organize firmware
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        tar -cvf firmware.tar *
        split -b 1024m firmware.tar firmware.tar.part

    - name: Upload firmware parts
      uses: actions/upload-artifact@v4
      with:
        name: OpenWrt_Firmware_Split
        path: openwrt/bin/targets/*/*/firmware.tar.part*

    - name: Cleanup temporary files
      run: |
        cd openwrt/bin/targets/*/*
        rm -f firmware.tar
